#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

# Testing if ZeroTier is installed
if ! yunohost app list | grep -q "id: zerotier"; then
    ynh_die "ZeroTier is needed, but it is not installed. There is a package for that!"
fi

# Let's retrieve information on the ZeroTier installation
zt_token="$(</var/lib/zerotier-one/authtoken.secret)"
zt_addr="localhost:$(</var/lib/zerotier-one/zerotier-one.port)"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

# If admin or password do not exist, assign the standard ones and have them replaced upon first login
if [ -z "${admin:-}" ] || [ -z "${hashedpassword:-}" ]; then
    admin="admin"
    hashedpassword='$argon2i$v=19$m=4096,t=3,p=1$/VYxjWHBzbkuCEO6Hh0AUw$nJaTJtth57vCAyYvg+UbtnscilR0UcE02AfLOhERe3A'
    pass_set="false"
    ynh_app_setting_set --key="admin" --value="$admin"
    ynh_app_setting_set --key="hashedpassword" --value="$hashedpassword"

    # Setup user credentials file
    echo "{\"$admin\":{\"name\":\"$admin\",\"pass_set\":$pass_set,\"hash\":\"$hashedpassword\"}}" > "$install_dir/src/etc/passwd"
else
    pass_set="true"
fi

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="$app" --action="stop"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Upgrading NodeJS..."

ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir" --full_replace --keep="src/.env"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R "$app:$app" "$install_dir"
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating $app's configuration files..."

ynh_config_add --template="env" --destination="$install_dir/src/.env"

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown "$app:$app" "$install_dir/src/.env"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 600 "$install_dir/src/.env"

#=================================================
# NPM INSTALL
#=================================================
ynh_script_progression "Building $app..."

pushd "$install_dir/src"
    ynh_hide_warnings ynh_exec_as_app node_load_PATH" "HOME=$install_dir" npm install node-gyp
    ynh_hide_warnings ynh_exec_as_app node_load_PATH" "HOME=$install_dir" npm install argon2-cli
    ynh_hide_warnings ynh_exec_as_app node_load_PATH" "HOME=$install_dir" npm install
popd

#=================================================
# LINK CERTIFICATES
#=================================================

# Even though one can stay in HTTP mode, the ztncui requires SSL certificates
#Â let's use the ones of the domain
cp "/etc/yunohost/certs/$domain/key.pem" "$install_dir/src/etc/tls/privkey.pem"
cp "/etc/yunohost/certs/$domain/crt.pem" "$install_dir/src/etc/tls/fullchain.pem"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

# Create a dedicated nginx config
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd
yunohost service add "$app" --description "ZeroTier network controller user interface" --log "/var/log/$app/$app.log"

# Use logrotate to manage app-specific logfile(s)
ynh_config_add_logrotate

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app" --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"

if [ $pass_set = "false" ]; then
    ynh_print_warn "Default ztncui credentials were reset: admin/password"
fi
